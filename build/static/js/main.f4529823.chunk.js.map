{"version":3,"sources":["types.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","util.js","components/products.js","actions/productActions.js","actions/cartAction.js","components/filter.js","components/cart.js","actions/orderActions.js","screens/homeScreen.js","components/orders.js","screens/adminScreen.js","App.js","index.js"],"names":["FETCH_PRODUCTS","FILTER_PRODUCTS_BY_SIZE","ORDER_PRODUCTS_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","FETCH_ORDERS","DELETE_ORDER","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","products","state","action","type","size","payload","filteredItems","items","sort","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","applyMiddleware","thunk","formatCurrency","num","Number","toFixed","toLocaleString","Products","props","openModal","product","setState","closeModal","this","fetchProducts","bottom","cascade","className","map","href","_id","src","image","alt","title","onClick","price","addToCart","isOpen","onRequestClose","description","availableSizes","x","Component","connect","dispatch","a","fetch","res","json","data","getState","slice","alreadyExists","forEach","element","count","push","setItem","stringify","Filter","filteredProducts","filterProducts","length","value","onChange","e","sortProducts","target","filter","p","indexOf","sortedProducts","b","Cart","handleInput","name","createOrder","preventDefault","address","email","total","reduce","c","clearOrder","showCheckOut","createdAt","left","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","HomeScreen","React","Orders","fetchOrders","removeFromOrders","orderAfterDeleted","o","AdminScreen","App","to","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4529823.chunk.js","sourcesContent":["export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\n\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\nexport const DELETE_ORDER = \"DELETE_ORDER\";","\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { orderReducer } from \"./reducers/orderReducers\";\n\nconst initialState = {};\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combineReducers({\n    products: productsReducer,\n    cart: cartReducer,\n    order: orderReducer,\n  }),\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\nexport default store;","import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\n\nexport const productsReducer = (state = {}, action) => {\n    switch (action.type) {\n        \n        case FILTER_PRODUCTS_BY_SIZE:\n            return {\n                ...state,\n                size: action.payload.size,\n                filteredItems: action.payload.items,\n            }\n        \n        case ORDER_PRODUCTS_BY_PRICE:\n            return {\n                ...state,\n                sort: action.payload.sort,\n                filteredItems: action.payload.items,\n            }\n        \n        case FETCH_PRODUCTS:\n            return { items : action.payload, filteredItems : action.payload }\n        default:\n            return state;\n    }\n}\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const cartReducer = (\n  state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\n  action\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { cartItems: action.payload.cartItems };\n    case REMOVE_FROM_CART:\n      return { cartItems: action.payload.cartItems };\n    default:\n      return state;\n  }\n};","import { CREATE_ORDER, CLEAR_ORDER, FETCH_ORDERS, DELETE_ORDER} from \"../types\";\n\nexport const orderReducer = (state = {}, action) =>  {\n    switch(action.type) {\n        case CREATE_ORDER:\n            return { order: action.payload }\n\n        case CLEAR_ORDER:\n            return { order: null }\n\n        case FETCH_ORDERS:\n            return { orders: action.payload }\n        \n        case DELETE_ORDER:\n            return { orders: action.payload }\n\n        default:\n            return state;\n    }\n}","export default function formatCurrency(num) {\n    return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \";\n  }","import React, { Component } from 'react'\nimport formatCurrency from '../util'\nimport Fade from 'react-reveal/Fade'\nimport Modal from 'react-modal'\nimport Zoom from \"react-reveal/Zoom\";\n\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\nimport { addToCart } from '../actions/cartAction';\n\nclass Products extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            product: null,\n        } \n    }\n\n    componentDidMount() {\n        this.props.fetchProducts();\n    }\n\n    openModal = (product) => {\n        this.setState({product: product})\n    }    \n    closeModal = () => {\n        this.setState({product: null})\n    }\n    render() { \n        const { product } = this.state;\n        return (\n            <div>\n                <Fade bottom cascade={true}>\n                    {!this.props.products ? (\n                        <div>Loading...</div>\n                    ) : (\n                            <ul className='products'>\n                                {this.props.products.map(product => (\n                                    <li key={product._id}>\n                                        <div className='product'>\n                                            <a href={\"#\" + product._id}>\n                                                <img src={product.image} \n                                                    alt={product.title} \n                                                    onClick={() => this.openModal(product)}>\n                                                </img>\n                                                <p>{product.title}</p>\n                                            </a>\n                                            <div className='product-price'>\n                                                <div>{formatCurrency(product.price)}</div>\n                                                <button onClick={() => this.props.addToCart(product)} \n                                                        className='button primary'>\n                                                    Add To Cart\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                </Fade>\n                \n                {product && (\n                    <Modal isOpen={true} onRequestClose={this.closeModal}>\n                        <Zoom>\n                            <button className='close-modal' onClick={this.closeModal} >x</button>\n                            <div className='product-details'>\n                                <img src={product.image} alt={product.title}></img>\n                                <div className='product-details-description'>\n                                    <p><strong>{product.title}</strong></p>\n                                    <p>{product.description}</p>\n                                    <p>\n                                        Available Sizes: {' '}\n                                        {product.availableSizes.map( x =>\n                                            <span>\n                                                {' '}\n                                                <button className='button'>{x}</button>\n                                            </span>\n                                        )}\n                                    </p>\n                                    <div className='product-price'>\n                                        <div>\n                                            {formatCurrency(product.price)}\n                                        </div>\n                                        <button className='button primary' onClick={() => {\n                                            this.props.addToCart(product);\n                                            this.closeModal();\n                                        }}>\n                                        Add to cart\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </Zoom>\n                    </Modal>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({ products: state.products.filteredItems }),\n    {\n      fetchProducts,\n      addToCart,\n    }\n  )(Products);","import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from '../types';\n\nexport const fetchProducts = () => async (dispatch) => {\n    const res = await fetch('/api/products');\n    const data = await res.json()\n    dispatch (\n        {\n            type: FETCH_PRODUCTS,\n            payload: data,\n        }\n    );\n}\n\nexport const filterProducts = (products, size) => (dispatch) => {\n    dispatch(\n        {\n            type: FILTER_PRODUCTS_BY_SIZE,\n            payload: {\n                size: size,\n                items: size === \"ALL\" ? products : products.filter((p) => p.availableSizes.indexOf(size) >= 0),\n            }\n        }\n    )\n}\n\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\n    const sortedProducts = filteredProducts.slice();\n    if (sort === \"latest\") {\n      sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1));\n    } else {\n      sortedProducts.sort((a, b) =>\n        sort === \"lowest\"\n          ? a.price > b.price\n            ? 1\n            : -1\n          : a.price > b.price\n          ? -1\n          : 1\n      );\n    }\n    dispatch({\n      type: ORDER_PRODUCTS_BY_PRICE,\n      payload: {\n        sort: sort,\n        items: sortedProducts,\n      },\n    });\n  };","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.slice();\n\n    let alreadyExists = false;\n    cartItems.forEach(element => {\n        if(element._id === product._id) {\n            alreadyExists = true;\n            element.count++;\n        }\n    });\n    if (!alreadyExists) {\n        cartItems.push({...product, count: 1})\n    }\n    dispatch (\n        {\n            type: ADD_TO_CART,\n            payload: { cartItems },\n        }\n    )\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n}\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.slice().filter(\n        p => p._id !== product._id\n    )\n    dispatch ({\n        type: REMOVE_FROM_CART,\n        payload: { cartItems }\n    })\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { filterProducts, sortProducts } from '../actions/productActions'\n\nclass Filter extends Component {\n    render() {\n        return !this.props.filteredProducts ? (\n            <div>Loading...</div>\n          ) : (\n            <div className='filter'>\n                <div className='filter-result'>{this.props.filterProducts.length} Products Found</div>\n\n                <div className='filter-sort'>Order {\" \"}\n                    <select value={this.props.sort} \n                            onChange={(e) => \n                                this.props.sortProducts(\n                                    this.props.filteredProducts, \n                                    e.target.value\n                                )\n                            }\n                    >\n                        <option value='latest'> Latest</option>\n                        <option value='lowest'>Lowest</option>\n                        <option value='highest'>Highest</option>\n                    </select>\n                </div>\n\n                <div className='filter-size'>Filter {\" \"}\n                    <select value={this.props.size} \n                            onChange={(e) => \n                                this.props.filterProducts (\n                                    this.props.products,\n                                    e.target.value\n                                )\n                            }\n                    >\n                        <option value='ALL'>ALL</option>\n                        <option value='XS'>XS</option>\n                        <option value='S'>S</option>\n                        <option value='M'>M</option>\n                        <option value='L'>L</option>\n                        <option value='XL'>XL</option>\n                        <option value='XXL'>XXL</option>\n                    </select>\n                </div>\n            </div>\n          )\n    }\n}\n\nexport default connect((state) => ({\n    size: state.products.size,\n    sort: state.products.sort,\n    products: state.products.items,\n    filteredProducts: state.products.filteredItems,\n}),\n{\n    filterProducts,\n    sortProducts,\n}\n)(Filter)\n","import React, { Component } from 'react'\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade';\nimport { connect } from 'react-redux';\nimport { removeFromCart } from '../actions/cartAction'\nimport { createOrder, clearOrder } from '../actions/orderActions'\nimport Modal from 'react-modal'\nimport Zoom from \"react-reveal/Zoom\";\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showCheckOut : false,\n            name : '',\n            email : '',\n            address : '',\n        }\n    }\n    \n    handleInput = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    createOrder = (e) => {\n        e.preventDefault(); // we are not gonna refresh the page when user click submit\n        const order = {\n            name: this.state.name,\n            address: this.state.address,\n            email: this.state.email,\n            cartItems: this.props.cartItems,\n            total: this.props.cartItems.reduce((a, c) => (a + c.price * c.count), 0),\n        }\n        this.props.createOrder(order);\n    }\n\n    closeModal = () => {\n        this.props.clearOrder();\n    };\n\n    render() {\n        const { cartItems, order } = this.props;\n\n        return (\n            <div>\n                {cartItems.length === 0 ? (<div className='cart cart-header'>Cart is empty</div>) \n                :\n                (<div className='cart cart-header'>You have {cartItems.length} in the cart!</div>)\n                }\n                {order && (\n                    <Modal isOpen={true} onRequestClose={this.closeModal} >\n                        <Zoom>\n                            <button className=\"close-modal\" onClick={this.closeModal}>\n                                x\n                            </button>\n                                <div className=\"order-details\">\n                                    <h2 className=\"success-message\">Your order has been placed.</h2>\n                                    <h3>Order Id: {order._id}</h3>\n                                    <ul>\n                                        <li>\n                                            <div>Name:</div>\n                                            <div>{order.name}</div>\n                                        </li>\n                                        <li>\n                                            <div>Email:</div>\n                                            <div>{order.email}</div>\n                                        </li>\n                                        <li>\n                                            <div>Address:</div>\n                                            <div>{order.address}</div>\n                                        </li>\n                                        <li>\n                                            <div>Date:</div>\n                                            <div>{order.createdAt}</div>\n                                        </li>\n                                        <li>\n                                            <div>Total:</div>\n                                            <div>{formatCurrency(order.total)}</div>\n                                        </li>\n                                        <li>\n                                            <div>Cart Items:</div>\n                                            <div className='items'>\n                                                {order.cartItems.map((x) => (\n                                                    <div>\n                                                        {x.count} {\" x \"} {x.title}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n                        </Zoom>\n                    </Modal>\n                )}\n\n                <div>\n                    <div className=\"cart\">\n                        <Fade left cascade={true}>\n                            <ul className=\"cart-items\">\n                            {cartItems.map((item) => (\n                                <li key={item._id}>\n                                <div>\n                                    <img src={item.image} alt={item.title}></img>\n                                </div>\n                                <div>\n                                    <div>{item.title}</div>\n                                    <div className=\"right\">\n                                    {formatCurrency(item.price)} x {item.count}{\" \"}\n                                    <button\n                                        className=\"button\"\n                                        onClick={() => this.props.removeFromCart(item)}\n                                    >\n                                        Remove\n                                    </button>\n                                    </div>\n                                </div>\n                                </li>\n                            ))}\n                            </ul>\n                        </Fade>\n                    </div>\n\n                    {cartItems.length !== 0 && (\n                        <div>\n                            <div className='cart'>\n                                <div className='total'>\n                                    <div>\n                                        Total:{' '}\n                                        { formatCurrency(cartItems.reduce((a, c) => a + (c.price * c.count), 0)) }\n                                    </div>\n                                    <button \n                                        onClick={() => {\n                                            this.setState({ showCheckOut : true })\n                                        }}\n                                        className='button primary'>Proceed\n                                    </button>\n                                </div>\n                            </div> \n\n                            {this.state.showCheckOut && (\n                                <Fade right cascade={true}>\n                                    <div className=\"cart\">\n                                        <form onSubmit={this.createOrder}>\n                                            <ul className=\"form-container\">\n                                                <li>\n                                                    <label>Email</label>\n                                                    <input name='email' type='email' required onChange={this.handleInput}></input>\n                                                </li>\n                                                <li>\n                                                    <label>Name</label>\n                                                    <input name='name' type='text' required onChange={this.handleInput}></input>\n                                                </li>\n                                                <li>\n                                                    <label>Address</label>\n                                                    <input name='address' type='text' required onChange={this.handleInput}></input>\n                                                </li>\n                                                <li>\n                                                    <button type='submit' className='button primary'>Checkout</button>\n                                                </li>\n                                            </ul>\n                                        </form>\n                                    </div>\n                                </Fade>\n                            )}\n                        </div> \n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => ({\n    order: state.order.order,\n    cartItems: state.cart.cartItems\n}),{ removeFromCart, createOrder, clearOrder })\n(Cart);","import { CLEAR_CART, CLEAR_ORDER, CREATE_ORDER, FETCH_ORDERS, DELETE_ORDER } from \"../types\"\n\nexport const createOrder = (order) => (dispatch) => {\n    fetch(\"/api/orders\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\",\n        },\n        body: JSON.stringify(order),\n    }).then (res => res.json())\n    .then(data => {\n        dispatch ({\n            type: CREATE_ORDER,\n            payload: data,\n        });\n        localStorage.clear(\"cartItems\");\n        dispatch ({\n            type: CLEAR_CART\n        })\n    })\n}\n\nexport const clearOrder = () => dispatch => {\n    dispatch ({\n        type: CLEAR_ORDER\n    })\n}\n\nexport const fetchOrders = () => dispatch => {\n    fetch ('/api/orders')\n    .then((res) => res.json())\n    .then((data) => {\n        dispatch ({\n            type: FETCH_ORDERS,\n            payload: data,\n        })\n    })\n}\n\n// export const removeFromOrders = (orders, order) => (dispatch) => {\n//     fetch (`/api/orders/${order._id}`, {\n//         method: \"DELETE\"\n//     })\n//     .then((res) => res.json())\n//     .then((data) => {\n//         const orderAfterDeleted = orders.filter(o => data._id !== o._id );\n//         dispatch ({\n//             type: DELETE_ORDER,\n//             payload: orderAfterDeleted,\n//         })\n//     })\n// }\nexport const removeFromOrders = (orders, order) => async (dispatch) => {\n    const res = await fetch (`/api/orders/${order._id}`, {\n                                method: \"DELETE\"\n                            });\n    const data = await res.json();\n    const orderAfterDeleted = orders.filter(o => data._id !== o._id );\n    dispatch ({\n        type: DELETE_ORDER,\n        payload: orderAfterDeleted,\n    });\n}","import React from 'react';\nimport Products from '../components/products';\nimport Filter from '../components/filter';\nimport Cart from '../components/cart';\n\nexport default class HomeScreen extends React.Component {\n    render() {\n      return (\n        <div>\n          <div className=\"content\">\n            <div className=\"main\">\n              <Filter></Filter>\n              <Products></Products>\n            </div>\n            <div className=\"sidebar\">\n              <Cart></Cart>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders, removeFromOrders } from \"../actions/orderActions\";\nimport formatCurrency from \"../util\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n  render() {\n    const { orders } = this.props;\n    \n    return !orders ? (\n      <div>Orders</div>\n    ) : (\n      <div className=\"orders\">\n        <h2>Orders</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADDRESS</th>\n              <th>ITEMS</th>\n              <th>EDIT</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr>\n                <td>{order._id}</td>\n                <td>{order.createdAt}</td>\n                <td> {formatCurrency(order.total)}</td>\n                <td>{order.name}</td>\n                <td>{order.email}</td>\n                <td>{order.address}</td>\n                <td>\n                  {order.cartItems.map((item) => (\n                    <div>\n                      {item.count} {\" x \"} {item.title}\n                    </div>\n                  ))}\n                </td>\n                <td>\n                    <button className='button primary' \n                            onClick={() => this.props.removeFromOrders(orders, order)}\n                    >Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    orders: state.order.orders,\n  }),\n  {\n    fetchOrders, removeFromOrders\n  }\n)(Orders);","import React, { Component } from \"react\";\nimport Orders from \"../components/orders\";\n\nexport default class AdminScreen extends Component {\n  render() {\n    return (\n      <div>\n        <Orders />\n      </div>\n    );\n  }\n}","// feature 1\nimport React from 'react';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport HomeScreen from \"./screens/homeScreen\";\nimport AdminScreen from \"./screens/adminScreen\";\n\nclass App extends React.Component {\n\n  render () {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"grid-container\">\n          <header>\n            <Link to=\"/\">Awesome Shopping Cart</Link>\n            <Link to=\"/admin\">Admin</Link>\n          </header>\n          <main>\n            <Route path=\"/\" component={HomeScreen} exact></Route>\n            <Route path='/admin' component={AdminScreen}></Route>\n          </main>\n          <footer>\n            All right is reserved.\n          </footer>\n        </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}